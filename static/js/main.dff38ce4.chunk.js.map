{"version":3,"sources":["components/Loading/Loading.tsx","components/Loading/index.ts","contexts/SelectedMovieContext.tsx","components/Button/Button.tsx","components/Button/index.ts","services/movieService.tsx","components/Backdrop/Backdrop.tsx","components/Backdrop/index.ts","components/MovieDetails/MovieDetails.tsx","components/MovieDetails/index.ts","routes/Home/index.ts","routes/Movie/index.ts","contexts/TotalContext.tsx","components/Counter/index.ts","components/Counter/Counter.tsx","containers/TicketContainer/index.ts","containers/TicketContainer/TicketContainer.tsx","containers/ChooseTicketContainer/index.ts","containers/ChooseTicketContainer/ChooseTicketContainer.tsx","containers/ChooseSeatContainer/ChooseSeatContainer.tsx","containers/ChooseSeatContainer/index.ts","routes/Ticketing/Ticketing.tsx","routes/Ticketing/index.ts","routes/Successful/index.ts","routes/Successful/Successful.tsx","routes/index.ts","routes/Routes.tsx","components/Header/index.ts","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["Loading","className","initialState","selectedMovie","id","title","overview","credits","cast","videos","results","key","name","setSelectedMovie","SelectedMovieContext","createContext","SelectedMovieProvider","children","useState","Provider","value","Button","onClick","fetchMovies","a","fetch","response","json","movies","fetchMovieDetailsByID","movieID","movieDetails","fetchTicketPrices","ticketPrices","fetchSoldSeats","hallID","showtime","soldSeats","Backdrop","src","classNames","alt","baseUrl","MovieDetails","showMoreDetail","backdrop_path","poster","poster_path","slice","map","profilPath","profile_path","profil","width","height","frameBorder","allow","allowFullScreen","LoadableHome","Loadable","loader","loading","reducer","state","action","type","totalPrice","payload","price","totalTicketCount","Error","dispatch","TotalContext","TotalContextProvider","useReducer","Counter","count","increment","decrement","TicketContainer","setCount","useContext","ChooseTicketContainer","nextState","setTicketPrices","useEffect","then","res","ticketPrice","hallTemplate","ChooseSeatContainer","props","setSoldSeats","selectedSeats","setSelectedSeats","handleClick","event","seatElement","currentTarget","seatID","includes","seatIndex","indexOf","splice","classList","remove","length","add","seats","idx","charAt","seat","Ticketing","location","currentTicketingIdx","setCurrentTicketingIdx","document","documentElement","scrollTop","ticketingComponents","hall_id","to","pathname","Successful","toString","window","href","process","Routes","path","exact","component","Home","Movie","Header","App","setConfig","ignoreSFC","pureRender","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.dff38ce4.chunk.js","sourcesContent":["import React, { SFC } from 'react';\r\nimport './Loading.scss';\r\n\r\nconst Loading: SFC = () => (\r\n  <section className=\"loading\">\r\n    <div className=\"lds-ellipsis\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default Loading;\r\n","import Loading from './Loading';\r\n\r\nexport default Loading;\r\n","import React, { createContext, FC, useState } from 'react';\r\n\r\ninterface State {\r\n  selectedMovie: MovieDetails;\r\n  setSelectedMovie: (selectedMovie: MovieDetails) => void;\r\n}\r\n\r\nconst initialState: State = {\r\n  selectedMovie: {\r\n    id: 0,\r\n    title: '',\r\n    overview: '',\r\n    credits: { cast: [] },\r\n    videos: { results: [{ key: '', name: '' }] },\r\n  },\r\n  setSelectedMovie: () => {},\r\n};\r\n\r\nexport const SelectedMovieContext = createContext(initialState);\r\n\r\nexport const SelectedMovieProvider: FC = ({ children }) => {\r\n  const [selectedMovie, setSelectedMovie] = useState(initialState.selectedMovie);\r\n\r\n  return (\r\n    <SelectedMovieContext.Provider value={{ selectedMovie, setSelectedMovie }}>\r\n      {children}\r\n    </SelectedMovieContext.Provider>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport './Button.scss';\r\n\r\ninterface Props {\r\n  onClick?: () => void;\r\n  value: string;\r\n}\r\n\r\nconst Button: FC<Props> = ({ onClick, value }) => (\r\n  <button className=\"button\" onClick={onClick}>\r\n    {value}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","// TODO: CATCH ERROR\r\nexport const fetchMovies = async (): Promise<Movie[]> => {\r\n  const response = await fetch('https://cinemania-ab421.firebaseio.com/movies.json');\r\n  const movies: Movie[] = await response.json();\r\n\r\n  return movies;\r\n};\r\n\r\nexport const fetchMovieDetailsByID = async (movieID: string): Promise<MovieDetails> => {\r\n  const response = await fetch(\r\n    `https://cinemania-ab421.firebaseio.com/movieDetails/${movieID}.json`,\r\n  );\r\n  const movieDetails: MovieDetails = await response.json();\r\n\r\n  return movieDetails;\r\n};\r\n\r\nexport const fetchTicketPrices = async (): Promise<TicketPrice[]> => {\r\n  const response = await fetch('https://cinemania-ab421.firebaseio.com/prices.json');\r\n  const ticketPrices: TicketPrice[] = await response.json();\r\n\r\n  return ticketPrices;\r\n};\r\n\r\nexport const fetchSoldSeats = async (hallID: number, showtime: string): Promise<string[]> => {\r\n  const response = await fetch(\r\n    `https://cinemania-ab421.firebaseio.com/soldSeats/${hallID}/${showtime}.json`,\r\n  );\r\n  const soldSeats: string[] = await response.json();\r\n\r\n  return soldSeats;\r\n};\r\n","import React, { SFC, Fragment } from 'react';\r\nimport './Backdrop.scss';\r\n\r\ninterface Props {\r\n  src?: string;\r\n  classNames?: string;\r\n}\r\n\r\nconst Backdrop: SFC<Props> = ({ src = '', classNames = '' }) => (\r\n  <Fragment>\r\n    <img\r\n      className={`backdrop ${classNames}`}\r\n      src={`https://image.tmdb.org/t/p/original${src}`}\r\n      alt=\"backdrop\"\r\n    />\r\n    <div className=\"backdrop-overlay\" />\r\n  </Fragment>\r\n);\r\n\r\nexport default Backdrop;\r\n","import Backdrop from './Backdrop';\r\n\r\nexport default Backdrop;\r\n","import React, { SFC, Fragment } from 'react';\r\nimport './MovieDetails.scss';\r\n\r\nimport Backdrop from '../Backdrop';\r\n\r\nenum baseUrl {\r\n  poster = 'https://image.tmdb.org/t/p/w300_and_h450_bestv2',\r\n  profil = 'https://image.tmdb.org/t/p/w100_and_h100_bestv2',\r\n}\r\n\r\ninterface Props {\r\n  selectedMovie: MovieDetails;\r\n  showMoreDetail?: boolean;\r\n}\r\n\r\nconst MovieDetails: SFC<Props> = ({ selectedMovie, showMoreDetail = false, children }) => (\r\n  <Fragment>\r\n    <Backdrop src={selectedMovie.backdrop_path || ''} />\r\n    <img className=\"poster\" src={baseUrl.poster + selectedMovie.poster_path} alt=\"poster\" />\r\n\r\n    <section className=\"detail\">\r\n      <h2 className=\"title\">{selectedMovie.title}</h2>\r\n      <h3>Overview</h3>\r\n      <p>{selectedMovie.overview}</p>\r\n\r\n      {showMoreDetail ? (\r\n        <Fragment>\r\n          <h3>Cast</h3>\r\n          {selectedMovie.credits.cast.slice(0, 6).map(({ profile_path: profilPath }) => (\r\n            <img\r\n              className=\"cast-profil\"\r\n              src={baseUrl.profil + profilPath}\r\n              alt=\"profil\"\r\n              key={profilPath}\r\n            />\r\n          ))}\r\n\r\n          <h3>Trailer</h3>\r\n          <iframe\r\n            title={selectedMovie.videos.results[0].name}\r\n            width=\"200\"\r\n            height=\"100\"\r\n            src={`https://www.youtube.com/embed/${selectedMovie.videos.results[0].key}`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope\"\r\n            allowFullScreen\r\n          ></iframe>\r\n        </Fragment>\r\n      ) : null}\r\n\r\n      {children}\r\n    </section>\r\n  </Fragment>\r\n);\r\n\r\nexport default MovieDetails;\r\n","import MovieDetails from './MovieDetails';\r\n\r\nexport default MovieDetails;\r\n","import Loadable from 'react-loadable';\r\n\r\nimport Loading from '../../components/Loading';\r\n\r\nconst LoadableHome = Loadable({\r\n  loader: () => import('./Home'),\r\n  loading: Loading,\r\n});\r\n\r\nexport default LoadableHome;\r\n","import Loadable from 'react-loadable';\r\n\r\nimport Loading from '../../components/Loading';\r\n\r\nconst LoadableHome = Loadable({\r\n  loader: () => import('./Movie'),\r\n  loading: Loading,\r\n});\r\n\r\nexport default LoadableHome;\r\n","import React, { createContext, FC, Reducer, useReducer, Dispatch } from 'react';\r\n\r\ninterface State {\r\n  totalPrice: number;\r\n  totalTicketCount: number;\r\n}\r\n\r\ninterface UseReduser {\r\n  state: State;\r\n  dispatch: Dispatch<Action>;\r\n}\r\n\r\nconst reducer: Reducer<State, Action> = (state, action) => {\r\n  switch (action.type) {\r\n    case 'add':\r\n      return {\r\n        totalPrice: state.totalPrice + action.payload.price,\r\n        totalTicketCount: state.totalTicketCount + 1,\r\n      };\r\n\r\n    case 'remove':\r\n      if (!state.totalTicketCount) return state;\r\n      return {\r\n        totalPrice: state.totalPrice - action.payload.price,\r\n        totalTicketCount: state.totalTicketCount - 1,\r\n      };\r\n\r\n    case 'reset':\r\n      return {\r\n        totalPrice: action.payload.price,\r\n        totalTicketCount: 0,\r\n      };\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst initialState: UseReduser = {\r\n  state: {\r\n    totalPrice: 0,\r\n    totalTicketCount: 0,\r\n  },\r\n  dispatch: () => {},\r\n};\r\n\r\nexport const TotalContext = createContext(initialState);\r\n\r\nexport const TotalContextProvider: FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState.state);\r\n\r\n  return <TotalContext.Provider value={{ state, dispatch }}>{children}</TotalContext.Provider>;\r\n};\r\n","import Counter from './Counter';\r\n\r\nexport default Counter;\r\n","import React, { FC } from 'react';\r\nimport './Counter.scss';\r\n\r\ninterface Props {\r\n  count: number;\r\n  decrement: () => void;\r\n  increment: () => void;\r\n}\r\n\r\nconst Counter: FC<Props> = ({ count, increment, decrement }) => (\r\n  <div className=\"counter\">\r\n    <button onClick={decrement}>-</button>\r\n    <p>{count}</p>\r\n    <button onClick={increment}>+</button>\r\n  </div>\r\n);\r\n\r\nexport default Counter;\r\n","import TicketContainer from './TicketContainer';\r\n\r\nexport default TicketContainer;\r\n","import React, { useState, FC, useContext } from 'react';\r\nimport './TicketContainer.scss';\r\n\r\nimport { TotalContext } from '../../contexts/TotalContext';\r\nimport Counter from '../../components/Counter';\r\n\r\ninterface Props {\r\n  price: number;\r\n  type: string;\r\n}\r\n\r\nconst TicketContainer: FC<Props> = ({ price, type }) => {\r\n  const [count, setCount] = useState(0);\r\n  const { dispatch } = useContext(TotalContext);\r\n\r\n  const increment = (): void => {\r\n    setCount(count + 1);\r\n    dispatch({ type: 'add', payload: { price } });\r\n  };\r\n\r\n  const decrement = (): void => {\r\n    if (!count) return;\r\n    setCount(count - 1);\r\n    dispatch({ type: 'remove', payload: { price } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ticket\">\r\n      <h4>{type}</h4>\r\n      <p className=\"price\">{price} TL</p>\r\n      <Counter count={count} increment={increment} decrement={decrement} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicketContainer;\r\n","import ChooseTicketContainer from './ChooseTicketContainer';\r\n\r\nexport default ChooseTicketContainer;\r\n","import React, { FC, useContext, useState, useEffect, Fragment } from 'react';\r\nimport './ChooseTicketContainer.scss';\r\n\r\nimport { fetchTicketPrices } from '../../services/movieService';\r\nimport { TotalContext } from '../../contexts/TotalContext';\r\n\r\nimport TicketContainer from '../TicketContainer';\r\nimport Loading from '../../components/Loading';\r\nimport Button from '../../components/Button';\r\n\r\nconst ChooseTicketContainer: FC<{ nextState: () => void }> = ({ nextState }) => {\r\n  const {\r\n    state: { totalPrice, totalTicketCount },\r\n    dispatch,\r\n  } = useContext(TotalContext);\r\n\r\n  const [ticketPrices, setTicketPrices] = useState<TicketPrice[]>();\r\n\r\n  useEffect(() => {\r\n    fetchTicketPrices().then(res => setTicketPrices(res));\r\n    dispatch({ type: 'reset', payload: { price: 0 } });\r\n  }, [dispatch]);\r\n\r\n  if (!ticketPrices) return <Loading />;\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"section-title\">Choose your ticket</h1>\r\n      {ticketPrices.map((ticketPrice: TicketPrice) => (\r\n        <TicketContainer key={ticketPrice.type} {...ticketPrice} />\r\n      ))}\r\n      <h4>Total Price: {totalPrice} TL</h4>\r\n      <Button onClick={() => totalTicketCount > 0 && nextState()} value=\"Continue\" />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ChooseTicketContainer;\r\n","import React, { FC, useContext, useState, MouseEvent, useEffect, Fragment } from 'react';\r\nimport './ChooseSeatContainer.scss';\r\n\r\nimport { TotalContext } from '../../contexts/TotalContext';\r\nimport { fetchSoldSeats } from '../../services/movieService';\r\n\r\nimport Loading from '../../components/Loading';\r\nimport Button from '../../components/Button';\r\n\r\ninterface Props {\r\n  showtime: string;\r\n  hallID: number;\r\n  nextState: () => void;\r\n  setSelectedSeats: (value: string[]) => void;\r\n  selectedSeats: string[];\r\n}\r\n\r\nconst hallTemplate: string[][] = [\r\n  ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10', 'A11', 'A12'],\r\n  ['B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B9', 'B10', 'B11', 'B12'],\r\n  ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10'],\r\n  ['D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7', 'D8', 'D9', 'D10'],\r\n  ['E1', 'E2', 'E3', 'E4', 'E5', 'E6', 'E7', 'E8', 'E9', 'E10'],\r\n  ['F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10'],\r\n  ['G1', 'G2', 'G3', 'G4', 'G5', 'G6', 'G7', 'G8', 'G9', 'G10'],\r\n  ['H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'H7', 'H8', 'H9', 'H10', 'H11', 'H12'],\r\n];\r\n\r\nconst ChooseSeatContainer: FC<Props> = props => {\r\n  const [soldSeats, setSoldSeats] = useState<string[]>([]);\r\n  const { hallID, showtime, nextState, selectedSeats, setSelectedSeats } = props;\r\n\r\n  const {\r\n    state: { totalTicketCount },\r\n  } = useContext(TotalContext);\r\n\r\n  useEffect(() => {\r\n    fetchSoldSeats(hallID, showtime).then(res => setSoldSeats(res));\r\n  }, [hallID, showtime]);\r\n\r\n  const handleClick = (event: MouseEvent<HTMLButtonElement>): void => {\r\n    const seatElement: HTMLButtonElement = event.currentTarget;\r\n    const seatID: string = seatElement.value;\r\n\r\n    if (soldSeats.includes(seatID)) return;\r\n\r\n    if (selectedSeats.includes(seatID)) {\r\n      const seatIndex: number = selectedSeats.indexOf(seatID);\r\n\r\n      selectedSeats.splice(seatIndex, 1);\r\n      setSelectedSeats(selectedSeats);\r\n      seatElement.classList.remove('selected');\r\n    } else if (totalTicketCount !== selectedSeats.length) {\r\n      seatElement.classList.add('selected');\r\n      setSelectedSeats([...selectedSeats, seatID]);\r\n    }\r\n  };\r\n\r\n  if (!soldSeats.length) return <Loading />;\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"section-title\">Choose your seat</h1>\r\n      <div className=\"seats-container\">\r\n        {hallTemplate.map((seats: string[], idx: number) => (\r\n          <div className=\"row\" key={seats[idx].charAt(0)}>\r\n            {seats.map((seat: string) => (\r\n              <button\r\n                className={soldSeats.includes(seat) ? 'seat sold' : 'seat'}\r\n                onClick={handleClick}\r\n                value={seat}\r\n                key={seat}\r\n              >\r\n                {seat}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        ))}\r\n        <div className=\"scene\">SCENE</div>\r\n      </div>\r\n      <Button\r\n        onClick={() => selectedSeats.length === totalTicketCount && nextState()}\r\n        value=\"Continue\"\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ChooseSeatContainer;\r\n","import ChooseSeatContainer from './ChooseSeatContainer';\r\n\r\nexport default ChooseSeatContainer;\r\n","import React, { FC, useState, useContext } from 'react';\r\nimport { RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport './Ticketing.scss';\r\n\r\nimport { SelectedMovieContext } from '../../contexts/SelectedMovieContext';\r\n\r\nimport ChooseTicketContainer from '../../containers/ChooseTicketContainer';\r\nimport ChooseSeatContainer from '../../containers/ChooseSeatContainer';\r\nimport MovieDetails from '../../components/MovieDetails';\r\n\r\ninterface RouteState {\r\n  showtime: string;\r\n}\r\n\r\nconst Ticketing: FC<RouteComponentProps<{}, {}, RouteState>> = ({ location }) => {\r\n  const { state } = location;\r\n  const [currentTicketingIdx, setCurrentTicketingIdx] = useState(0);\r\n  const [selectedSeats, setSelectedSeats] = useState<string[]>([]);\r\n  const { selectedMovie } = useContext(SelectedMovieContext);\r\n\r\n  const nextState = (): void => {\r\n    setCurrentTicketingIdx(currentTicketingIdx + 1);\r\n    document.documentElement.scrollTop = 0;\r\n  };\r\n\r\n  const ticketingComponents: JSX.Element[] = [\r\n    <ChooseTicketContainer nextState={nextState} />,\r\n    <ChooseSeatContainer\r\n      hallID={selectedMovie.hall_id || 0}\r\n      {...{ selectedSeats, setSelectedSeats, nextState, ...state }}\r\n    />,\r\n    <Redirect\r\n      to={{\r\n        pathname: '/successful',\r\n        state: { ...state, selectedSeats },\r\n      }}\r\n    />,\r\n  ];\r\n\r\n  return (\r\n    <div className=\"ticketing\">\r\n      <div className=\"movie-detail\">\r\n        <MovieDetails selectedMovie={selectedMovie} />\r\n      </div>\r\n      <div className=\"ticketing-states\">{ticketingComponents[currentTicketingIdx]}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ticketing;\r\n","import Ticketing from './Ticketing';\r\n\r\nexport default Ticketing;\r\n","import Successful from './Successful';\r\n\r\nexport default Successful;\r\n","import React, { FC, useContext } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport './Successful.scss';\r\n\r\nimport { SelectedMovieContext } from '../../contexts/SelectedMovieContext';\r\n\r\nimport Button from '../../components/Button';\r\nimport Backdrop from '../../components/Backdrop';\r\n\r\ninterface RouteState {\r\n  showtime: string;\r\n  selectedSeats: string[];\r\n}\r\n\r\nconst Successful: FC<RouteComponentProps<{}, {}, RouteState>> = ({ location }) => {\r\n  const { selectedMovie } = useContext(SelectedMovieContext);\r\n\r\n  return (\r\n    <div className=\"successful\">\r\n      <Backdrop src={selectedMovie.backdrop_path} />\r\n      <h1>Successful</h1>\r\n      <h2>\r\n        Movie: <span>{selectedMovie.title}</span>\r\n      </h2>\r\n      <h2>\r\n        Showtime: <span>{location.state.showtime}</span>\r\n      </h2>\r\n      <h2>\r\n        Chosen Seats: <span>{location.state.selectedSeats.toString()}</span>\r\n      </h2>\r\n      <Button\r\n        onClick={() => {\r\n          window.location.href = `${process.env.PUBLIC_URL}/`;\r\n        }}\r\n        value=\"Go Home\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Successful;\r\n","import Routes from './Routes';\r\n\r\nexport default Routes;\r\n","import React, { FC } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\nimport Movie from './Movie';\r\nimport Ticketing from './Ticketing';\r\nimport Successful from './Successful';\r\n\r\nconst Routes: FC = () => (\r\n  <Switch>\r\n    <Route path=\"/\" exact component={Home} />\r\n    <Route path=\"/movies/:id\" exact component={Movie} />\r\n    <Route path=\"/ticketing\" exact component={Ticketing} />\r\n    <Route path=\"/successful\" exact component={Successful} />\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.scss';\r\n\r\nconst Header: FC = () => (\r\n  <Link to=\"/\">\r\n    <h1 className=\"header\">CINEMANIA</h1>\r\n  </Link>\r\n);\r\n\r\nexport default Header;\r\n","import React, { FC, Fragment } from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport Routes from './routes';\n\nimport './App.scss';\n\nimport Header from './components/Header';\n\nconst App: FC = () => {\n  return (\n    <Fragment>\n      <Header />\n      <Routes />\n    </Fragment>\n  );\n};\n\nexport default hot(App);\n","import React, { FunctionComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport { setConfig } from 'react-hot-loader';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport './styles/index.scss';\nimport { SelectedMovieProvider } from './contexts/SelectedMovieContext';\nimport { TotalContextProvider } from './contexts/TotalContext';\n\nsetConfig({\n  ignoreSFC: true,\n  pureRender: true,\n});\n\nconst Root: FunctionComponent = () => (\n  <SelectedMovieProvider>\n    <TotalContextProvider>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n      </BrowserRouter>\n    </TotalContextProvider>\n  </SelectedMovieProvider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}