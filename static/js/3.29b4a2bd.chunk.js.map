{"version":3,"sources":["components/MovieCard/index.ts","components/MovieCard/MovieCard.tsx","containers/InTheatersContainer/index.ts","containers/InTheatersContainer/InTheatersContainer.tsx","components/RandomMovie/index.ts","components/RandomMovie/RandomMovie.tsx","routes/Home/Home.tsx"],"names":["MovieCard","movie","className","to","id","src","poster_path","alt","title","InTheatersContainer","movies","map","key","RandomMovie","Backdrop","backdrop_path","classNames","Home","useState","setMovies","randomMovie","setRandomMovie","useEffect","fetchMovies","then","res","value","length","Math","floor","random","Loading"],"mappings":"mOAEeA,G,MCIyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtC,yBAAKC,UAAU,cACb,kBAAC,IAAD,CAAMC,GAAE,kBAAaF,EAAMG,KACzB,yBAAKF,UAAU,SAASG,IALd,kDAK6BJ,EAAMK,YAAaC,IAAI,YAEhE,wBAAIL,UAAU,SAASD,EAAMO,UCTlBC,ECGsC,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACnD,yBAAKR,UAAU,eACb,wBAAIA,UAAU,SAAd,eACA,yBAAKA,UAAU,UACZQ,EAAOC,KAAI,SAACV,GAAD,OACV,kBAAC,EAAD,CAAWW,IAAKX,EAAMG,GAAIH,MAAOA,U,gBCR1BY,ECI4B,SAAC,GAAD,IAAGZ,EAAH,EAAGA,MAAH,OACzC,kBAAC,IAAD,CAAME,GAAE,kBAAaF,EAAMG,KACzB,yBAAKF,UAAU,gBACb,kBAACY,EAAA,EAAD,CAAUT,IAAKJ,EAAMc,cAAeC,WAAW,iCAC/C,wBAAId,UAAU,SAASD,EAAMO,U,OCqBpBS,UArBE,WAAO,IAAD,EACOC,mBAAkB,IADzB,mBACdR,EADc,KACNS,EADM,OAEiBD,qBAFjB,mBAEdE,EAFc,KAEDC,EAFC,KAYrB,OARAC,qBAAU,WACRC,cAAcC,MAAK,SAAAC,GAAG,OAAIN,EAAUM,QACnC,IAEHH,qBAAU,WAVG,IAACI,EAWZL,EAAeX,GAXHgB,EAWiBhB,EAAOiB,OAXNC,KAAKC,MAAMD,KAAKE,SAAWJ,QAYxD,CAAChB,IAECU,EAEH,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAanB,MAAOmB,IACpB,kBAAC,EAAD,CAAqBV,OAAQA,KAJR,kBAACqB,EAAA,EAAD","file":"static/js/3.29b4a2bd.chunk.js","sourcesContent":["import MovieCard from './MovieCard';\r\n\r\nexport default MovieCard;\r\n","import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MovieCard.scss';\r\n\r\nconst baseUrl = 'https://image.tmdb.org/t/p/w300_and_h450_bestv2';\r\n\r\nconst MovieCard: FC<{ movie: Movie }> = ({ movie }) => (\r\n  <div className=\"movie-card\">\r\n    <Link to={`/movies/${movie.id}`}>\r\n      <img className=\"poster\" src={baseUrl + movie.poster_path} alt=\"poster\" />\r\n    </Link>\r\n    <h4 className=\"title\">{movie.title}</h4>\r\n  </div>\r\n);\r\n\r\nexport default MovieCard;\r\n","import InTheatersContainer from './InTheatersContainer';\r\n\r\nexport default InTheatersContainer;\r\n","import React, { FC } from 'react';\r\nimport './InTheatersContainer.scss';\r\n\r\nimport MovieCard from '../../components/MovieCard';\r\n\r\nconst InTheatersContainer: FC<{ movies: Movie[] }> = ({ movies }) => (\r\n  <div className=\"in-theaters\">\r\n    <h1 className=\"title\">In Theaters</h1>\r\n    <div className=\"movies\">\r\n      {movies.map((movie: Movie) => (\r\n        <MovieCard key={movie.id} movie={movie} />\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default InTheatersContainer;\r\n","import RandomMovie from './RandomMovie';\r\n\r\nexport default RandomMovie;\r\n","import React, { SFC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './RandomMovie.scss';\r\n\r\nimport Backdrop from '../Backdrop';\r\n\r\nconst RandomMovie: SFC<{ movie: Movie }> = ({ movie }) => (\r\n  <Link to={`/movies/${movie.id}`}>\r\n    <div className=\"random-movie\">\r\n      <Backdrop src={movie.backdrop_path} classNames=\"blur-light no-stretch-height\" />\r\n      <h2 className=\"title\">{movie.title}</h2>\r\n    </div>\r\n  </Link>\r\n);\r\n\r\nexport default RandomMovie;\r\n","import React, { FC, Fragment, useState, useEffect } from 'react';\r\n\r\nimport { fetchMovies } from '../../services/movieService';\r\n\r\nimport InTheatersContainer from '../../containers/InTheatersContainer';\r\nimport RandomMovie from '../../components/RandomMovie';\r\nimport Loading from '../../components/Loading';\r\n\r\nconst random = (value: number) => Math.floor(Math.random() * value);\r\n\r\nconst Home: FC = () => {\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n  const [randomMovie, setRandomMovie] = useState<Movie>();\r\n\r\n  useEffect(() => {\r\n    fetchMovies().then(res => setMovies(res));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setRandomMovie(movies[random(movies.length)]);\r\n  }, [movies]);\r\n\r\n  if (!randomMovie) return <Loading />;\r\n  return (\r\n    <Fragment>\r\n      <RandomMovie movie={randomMovie} />\r\n      <InTheatersContainer movies={movies} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}