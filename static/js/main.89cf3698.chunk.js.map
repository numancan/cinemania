{"version":3,"sources":["components/Button/Button.tsx","components/Button/index.ts","components/Loading/Loading.tsx","components/Loading/index.ts","contexts/SelectedMovieContext.tsx","services/movieService.tsx","components/Backdrop/Backdrop.tsx","components/Backdrop/index.ts","components/MovieDetails/MovieDetails.tsx","components/CastCard/index.ts","components/CastCard/CastCard.tsx","components/MovieDetails/index.ts","routes/Home/index.ts","routes/Movie/index.ts","contexts/TotalContext.tsx","containers/TicketContainer/index.ts","containers/TicketContainer/TicketContainer.tsx","containers/ChooseTicketContainer/index.ts","containers/ChooseTicketContainer/ChooseTicketContainer.tsx","components/Hall/index.ts","components/Hall/Hall.tsx","containers/ChooseSeatContainer/ChooseSeatContainer.tsx","containers/ChooseSeatContainer/index.ts","routes/Ticketing/Ticketing.tsx","routes/Ticketing/index.ts","routes/Successful/index.ts","routes/Successful/Successful.tsx","routes/index.ts","routes/Routes.tsx","components/Header/index.ts","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["Button","onClick","children","secondary","className","Loading","initialState","selectedMovie","id","title","overview","credits","cast","videos","results","key","name","genres","runtime","setSelectedMovie","SelectedMovieContext","createContext","SelectedMovieProvider","useState","Provider","value","fetchMovies","a","fetch","response","json","movies","fetchMovieDetailsByID","movieID","movieDetails","fetchTicketPrices","ticketPrices","fetchSoldSeats","hallID","showtime","soldSeats","Backdrop","React","memo","src","classNames","alt","baseUrl","CastCard","profile_path","character","MovieDetails","showtimes","showMoreDetail","backdrop_path","poster","poster_path","map","genre","join","vote_average","to","pathname","state","window","location","href","slice","LoadableHome","Loadable","loader","loading","LoadableMovie","reducer","action","type","totalPrice","payload","price","totalTicketCount","Error","dispatch","TotalContext","TotalContextProvider","useReducer","TicketContainer","count","setCount","useContext","icon","faTicketAlt","size","ChooseTicketContainer","nextState","setTicketPrices","useEffect","then","res","ticketPrice","Hall","hallTemplate","seats","idx","charAt","seat","includes","ChooseSeatContainer","props","selectedSeats","setSelectedSeats","setSoldSeats","length","event","seatElement","currentTarget","seatID","seatIndex","indexOf","splice","classList","remove","add","Ticketing","currentTicketingIdx","setCurrentTicketingIdx","ticketingComponents","hall_id","Successful","process","Routes","useLocation","scrollTo","path","exact","component","Home","Movie","Header","useHistory","goBack","faChevronLeft","faGithub","App","setConfig","ignoreSFC","pureRender","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.89cf3698.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\n\r\nimport './Button.scss';\r\n\r\ninterface Props {\r\n  onClick?: () => void;\r\n  value?: string;\r\n  secondary?: boolean;\r\n}\r\n\r\n// TODO: maybe, using classnames is better\r\nconst Button: FC<Props> = ({ onClick, children, secondary }) => (\r\n  <button className={`button ${(secondary && 'secondary') || ''}`} onClick={onClick}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React, { SFC } from 'react';\r\nimport './Loading.scss';\r\n\r\nconst Loading: SFC = () => (\r\n  <section className=\"loading\">\r\n    <div className=\"lds-ellipsis\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default Loading;\r\n","import Loading from './Loading';\r\n\r\nexport default Loading;\r\n","import React, { createContext, FC, useState } from 'react';\r\n\r\ninterface State {\r\n  selectedMovie: MovieDetails;\r\n  setSelectedMovie: (selectedMovie: MovieDetails) => void;\r\n}\r\n\r\nconst initialState: State = {\r\n  selectedMovie: {\r\n    id: 0,\r\n    title: '',\r\n    overview: '',\r\n    credits: { cast: [] },\r\n    videos: { results: [{ key: '', name: '' }] },\r\n    genres: [],\r\n    runtime: '',\r\n  },\r\n  setSelectedMovie: () => {},\r\n};\r\n\r\nexport const SelectedMovieContext = createContext(initialState);\r\n\r\nexport const SelectedMovieProvider: FC = ({ children }) => {\r\n  const [selectedMovie, setSelectedMovie] = useState(initialState.selectedMovie);\r\n\r\n  return (\r\n    <SelectedMovieContext.Provider value={{ selectedMovie, setSelectedMovie }}>\r\n      {children}\r\n    </SelectedMovieContext.Provider>\r\n  );\r\n};\r\n","// TODO: CATCH ERROR\r\nexport const fetchMovies = async (): Promise<Movie[]> => {\r\n  const response = await fetch('https://cinemania-ab421.firebaseio.com/movies.json');\r\n  const movies: Movie[] = await response.json();\r\n\r\n  return movies;\r\n};\r\n\r\nexport const fetchMovieDetailsByID = async (movieID: string): Promise<MovieDetails> => {\r\n  const response = await fetch(\r\n    `https://cinemania-ab421.firebaseio.com/movieDetails/${movieID}.json`,\r\n  );\r\n  const movieDetails: MovieDetails = await response.json();\r\n\r\n  return movieDetails;\r\n};\r\n\r\nexport const fetchTicketPrices = async (): Promise<TicketPrice[]> => {\r\n  const response = await fetch('https://cinemania-ab421.firebaseio.com/prices.json');\r\n  const ticketPrices: TicketPrice[] = await response.json();\r\n\r\n  return ticketPrices;\r\n};\r\n\r\nexport const fetchSoldSeats = async (hallID: number, showtime: string): Promise<string[]> => {\r\n  const response = await fetch(\r\n    `https://cinemania-ab421.firebaseio.com/soldSeats/${hallID}/${showtime}.json`,\r\n  );\r\n  const soldSeats: string[] = await response.json();\r\n\r\n  return soldSeats;\r\n};\r\n","import React, { SFC, Fragment } from 'react';\r\nimport './Backdrop.scss';\r\n\r\ninterface Props {\r\n  src?: string;\r\n  classNames?: string;\r\n}\r\n\r\nconst Backdrop: SFC<Props> = React.memo(({ src = '', classNames = '' }) => (\r\n  <Fragment>\r\n    <img\r\n      className={`backdrop ${classNames}`}\r\n      src={`https://image.tmdb.org/t/p/original${src}`}\r\n      alt=\"backdrop\"\r\n    />\r\n    <div className=\"backdrop-overlay\" />\r\n  </Fragment>\r\n));\r\n\r\nexport default Backdrop;\r\n","import Backdrop from './Backdrop';\r\n\r\nexport default Backdrop;\r\n","import React, { SFC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Backdrop from '../Backdrop';\r\nimport CastCard from '../CastCard';\r\nimport Button from '../Button';\r\n\r\nimport './MovieDetails.scss';\r\n\r\nenum baseUrl {\r\n  poster = 'https://image.tmdb.org/t/p/w300_and_h450_bestv2',\r\n  profil = 'https://image.tmdb.org/t/p/w100_and_h100_bestv2',\r\n}\r\n\r\ninterface Props {\r\n  selectedMovie: MovieDetails;\r\n  showtimes?: string[];\r\n  showMoreDetail?: boolean;\r\n}\r\n\r\nconst MovieDetails: SFC<Props> = React.memo(({ selectedMovie, showtimes, showMoreDetail }) => {\r\n  const renderGenres = () => selectedMovie.genres.map(genre => genre.name).join(', ');\r\n\r\n  const renderShowtimes = () =>\r\n    showtimes &&\r\n    showtimes.map(showtime => (\r\n      <p className=\"button\" key={showtime}>\r\n        <Link to={{ pathname: '/ticketing', state: { showtime } }}>{showtime}</Link>\r\n      </p>\r\n    ));\r\n\r\n  const renderCast = () =>\r\n    selectedMovie.credits.cast.slice(0, 6).map(cast => <CastCard cast={cast} key={cast.id} />);\r\n\r\n  const goTrailer = () => {\r\n    window.location.href = `https://youtu.be/${selectedMovie.videos.results[0].key}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"movie-details\">\r\n      <div className=\"movie-detail-back\">\r\n        <Backdrop src={selectedMovie.backdrop_path || ''} classNames=\"no-stretch-height\" />\r\n      </div>\r\n      <div className=\"inner wrapper\">\r\n        <img className=\"poster\" src={baseUrl.poster + selectedMovie.poster_path} alt=\"poster\" />\r\n        <div className=\"content\">\r\n          <h1>{selectedMovie.title}</h1>\r\n          <h3 className=\"subheader\">\r\n            Genre:<span>{renderGenres()}</span>\r\n          </h3>\r\n\r\n          <h3 className=\"subheader\">\r\n            Duration:<span>{selectedMovie.runtime} minute</span>\r\n          </h3>\r\n\r\n          <h3 className=\"subheader\">\r\n            Rating:<span>{selectedMovie.vote_average}</span>\r\n          </h3>\r\n\r\n          {showMoreDetail && (\r\n            <div className=\"buttons\">\r\n              <details className=\"details\">\r\n                <summary className=\"button secondary\">Buy Ticket</summary>\r\n                {renderShowtimes()}\r\n              </details>\r\n              <Button onClick={goTrailer}>Trailer</Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {showMoreDetail && (\r\n        <section className=\"more-detail wrapper\">\r\n          <h2 className=\"subheader\">Overview</h2>\r\n          <p className=\"overview\">{selectedMovie.overview}</p>\r\n\r\n          <h2 className=\"subheader\">Cast</h2>\r\n          <section className=\"cast-cards\">{renderCast()}</section>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MovieDetails;\r\n","import CastCard from './CastCard';\r\n\r\nexport default CastCard;\r\n","import React, { SFC } from 'react';\r\n\r\nimport './CastCard.scss';\r\n\r\nconst baseUrl = 'https://image.tmdb.org/t/p/w300_and_h450_bestv2';\r\n\r\nconst CastCard: SFC<{ cast: Cast }> = ({ cast }) => (\r\n  <div className=\"cast\">\r\n    <img className=\"cast-profil\" src={baseUrl + cast.profile_path} alt=\"profil\" />\r\n    <span className=\"cast-name\">{cast.name}</span>\r\n    <span className=\"cast-character\">{cast.character}</span>\r\n  </div>\r\n);\r\n\r\nexport default CastCard;\r\n","import MovieDetails from './MovieDetails';\r\n\r\nexport default MovieDetails;\r\n","import Loadable from 'react-loadable';\r\n\r\nimport Loading from '../../components/Loading';\r\n\r\nconst LoadableHome = Loadable({\r\n  loader: () => import('./Home'),\r\n  loading: Loading,\r\n});\r\n\r\nexport default LoadableHome;\r\n","import Loadable from 'react-loadable';\r\n\r\nimport Loading from '../../components/Loading';\r\n\r\nconst LoadableMovie = Loadable({\r\n  loader: () => import('./Movie'),\r\n  loading: Loading,\r\n});\r\n\r\nexport default LoadableMovie;\r\n","import React, { createContext, FC, Reducer, useReducer, Dispatch } from 'react';\r\n\r\ninterface State {\r\n  totalPrice: number;\r\n  totalTicketCount: number;\r\n}\r\n\r\ninterface UseReduser {\r\n  state: State;\r\n  dispatch: Dispatch<Action>;\r\n}\r\n\r\nconst reducer: Reducer<State, Action> = (state, action) => {\r\n  switch (action.type) {\r\n    case 'add':\r\n      return {\r\n        totalPrice: state.totalPrice + action.payload.price,\r\n        totalTicketCount: state.totalTicketCount + 1,\r\n      };\r\n\r\n    case 'remove':\r\n      if (!state.totalTicketCount) return state;\r\n      return {\r\n        totalPrice: state.totalPrice - action.payload.price,\r\n        totalTicketCount: state.totalTicketCount - 1,\r\n      };\r\n\r\n    case 'reset':\r\n      return {\r\n        totalPrice: action.payload.price,\r\n        totalTicketCount: 0,\r\n      };\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst initialState: UseReduser = {\r\n  state: {\r\n    totalPrice: 0,\r\n    totalTicketCount: 0,\r\n  },\r\n  dispatch: () => {},\r\n};\r\n\r\nexport const TotalContext = createContext(initialState);\r\n\r\nexport const TotalContextProvider: FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState.state);\r\n\r\n  return <TotalContext.Provider value={{ state, dispatch }}>{children}</TotalContext.Provider>;\r\n};\r\n","import TicketContainer from './TicketContainer';\r\n\r\nexport default TicketContainer;\r\n","import React, { useState, FC, useContext } from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTicketAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { TotalContext } from '../../contexts/TotalContext';\r\nimport Button from '../../components/Button';\r\n\r\nimport './TicketContainer.scss';\r\n\r\ninterface Props {\r\n  price: number;\r\n  type: string;\r\n}\r\n\r\nconst TicketContainer: FC<Props> = ({ price, type }) => {\r\n  const [count, setCount] = useState(0);\r\n  const { dispatch } = useContext(TotalContext);\r\n\r\n  const increment = (): void => {\r\n    setCount(count + 1);\r\n    dispatch({ type: 'add', payload: { price } });\r\n  };\r\n\r\n  const decrement = (): void => {\r\n    if (!count) return;\r\n    setCount(count - 1);\r\n    dispatch({ type: 'remove', payload: { price } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ticket\">\r\n      <FontAwesomeIcon className=\"ticket-icon\" icon={faTicketAlt} size=\"2x\" />\r\n      <h4>{type}</h4>\r\n      <p className=\"price\">{price} TL</p>\r\n      <div className=\"counter\">\r\n        <Button onClick={decrement}>-</Button>\r\n        <p>{count}</p>\r\n        <Button onClick={increment}>+</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicketContainer;\r\n","import ChooseTicketContainer from './ChooseTicketContainer';\r\n\r\nexport default ChooseTicketContainer;\r\n","import React, { FC, useContext, useState, useEffect, Fragment } from 'react';\r\n\r\nimport { fetchTicketPrices } from '../../services/movieService';\r\nimport { TotalContext } from '../../contexts/TotalContext';\r\n\r\nimport TicketContainer from '../TicketContainer';\r\nimport Loading from '../../components/Loading';\r\nimport Button from '../../components/Button';\r\n\r\nimport './ChooseTicketContainer.scss';\r\n\r\nconst ChooseTicketContainer: FC<{ nextState: () => void }> = ({ nextState }) => {\r\n  const { state, dispatch } = useContext(TotalContext);\r\n  const { totalPrice, totalTicketCount } = state;\r\n\r\n  const [ticketPrices, setTicketPrices] = useState<TicketPrice[]>();\r\n\r\n  useEffect(() => {\r\n    fetchTicketPrices().then(res => setTicketPrices(res));\r\n    dispatch({ type: 'reset', payload: { price: 0 } });\r\n  }, [dispatch]);\r\n\r\n  const renderTicketContainers = () =>\r\n    ticketPrices &&\r\n    ticketPrices.map((ticketPrice: TicketPrice) => (\r\n      <TicketContainer key={ticketPrice.type} {...ticketPrice} />\r\n    ));\r\n\r\n  if (!ticketPrices) return <Loading />;\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"section-title\">Choose your ticket</h1>\r\n      {renderTicketContainers()}\r\n\r\n      <div className=\"choose-ticket-bottom\">\r\n        <h4>Total Price: {totalPrice} TL</h4>\r\n        <Button onClick={() => totalTicketCount > 0 && nextState()}>Continue</Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ChooseTicketContainer;\r\n","import Hall from './Hall';\r\n\r\nexport default Hall;\r\n","import React, { SFC, Fragment } from 'react';\r\n\r\nimport './Hall.scss';\r\n\r\ninterface Props {\r\n  onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n  hallTemplate: string[][];\r\n  soldSeats: string[];\r\n}\r\n\r\nconst Hall: SFC<Props> = React.memo(({ hallTemplate, onClick, soldSeats }) => (\r\n  <Fragment>\r\n    {hallTemplate.map((seats: string[], idx: number) => (\r\n      <div className=\"row\" key={seats[idx].charAt(0)}>\r\n        {seats.map((seat: string) => (\r\n          <button\r\n            className={soldSeats.includes(seat) ? 'seat sold' : 'seat'}\r\n            onClick={onClick}\r\n            value={seat}\r\n            key={seat}\r\n          >\r\n            {seat}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    ))}\r\n  </Fragment>\r\n));\r\n\r\nexport default Hall;\r\n","import React, { FC, useContext, useState, MouseEvent, useEffect, Fragment } from 'react';\r\n\r\nimport { TotalContext } from '../../contexts/TotalContext';\r\nimport { fetchSoldSeats } from '../../services/movieService';\r\n\r\nimport Loading from '../../components/Loading';\r\nimport Button from '../../components/Button';\r\nimport Hall from '../../components/Hall';\r\n\r\nimport './ChooseSeatContainer.scss';\r\n\r\ninterface Props {\r\n  showtime: string;\r\n  hallID: number;\r\n  nextState: () => void;\r\n  setSelectedSeats: (value: string[]) => void;\r\n  selectedSeats: string[];\r\n}\r\n\r\nconst hallTemplate: string[][] = [\r\n  ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10', 'A11', 'A12'],\r\n  ['B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B9', 'B10', 'B11', 'B12'],\r\n  ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10'],\r\n  ['D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7', 'D8', 'D9', 'D10'],\r\n  ['E1', 'E2', 'E3', 'E4', 'E5', 'E6', 'E7', 'E8', 'E9', 'E10'],\r\n  ['F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10'],\r\n  ['G1', 'G2', 'G3', 'G4', 'G5', 'G6', 'G7', 'G8', 'G9', 'G10'],\r\n  ['H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'H7', 'H8', 'H9', 'H10', 'H11', 'H12'],\r\n];\r\n\r\nconst ChooseSeatContainer: FC<Props> = props => {\r\n  const { hallID, showtime, nextState, selectedSeats, setSelectedSeats } = props;\r\n  const [soldSeats, setSoldSeats] = useState<string[]>([]);\r\n\r\n  const { totalTicketCount } = useContext(TotalContext).state;\r\n\r\n  useEffect(() => {\r\n    fetchSoldSeats(hallID, showtime).then(res => setSoldSeats(res));\r\n  }, [hallID, showtime]);\r\n\r\n  const handleClick = (event: MouseEvent<HTMLButtonElement>): void => {\r\n    const seatElement: HTMLButtonElement = event.currentTarget;\r\n    const seatID: string = seatElement.value;\r\n\r\n    if (soldSeats.includes(seatID)) return;\r\n\r\n    if (selectedSeats.includes(seatID)) {\r\n      const seatIndex: number = selectedSeats.indexOf(seatID);\r\n\r\n      selectedSeats.splice(seatIndex, 1);\r\n      setSelectedSeats(selectedSeats);\r\n      seatElement.classList.remove('selected');\r\n    } else if (totalTicketCount !== selectedSeats.length) {\r\n      seatElement.classList.add('selected');\r\n      setSelectedSeats([...selectedSeats, seatID]);\r\n    }\r\n  };\r\n\r\n  if (!soldSeats.length) return <Loading />;\r\n  return (\r\n    <div className=\"choose-seat\">\r\n      <h1 className=\"section-title\">Choose your seat</h1>\r\n      <div className=\"seats-container\">\r\n        {<Hall hallTemplate={hallTemplate} onClick={handleClick} soldSeats={soldSeats} />}\r\n        <div className=\"scene\">SCENE</div>\r\n      </div>\r\n\r\n      <Button onClick={() => selectedSeats.length === totalTicketCount && nextState()}>\r\n        Continue\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChooseSeatContainer;\r\n","import ChooseSeatContainer from './ChooseSeatContainer';\r\n\r\nexport default ChooseSeatContainer;\r\n","import React, { FC, useState, useContext } from 'react';\r\nimport { RouteComponentProps, Redirect } from 'react-router-dom';\r\n\r\nimport { SelectedMovieContext } from '../../contexts/SelectedMovieContext';\r\n\r\nimport ChooseTicketContainer from '../../containers/ChooseTicketContainer';\r\nimport ChooseSeatContainer from '../../containers/ChooseSeatContainer';\r\nimport MovieDetails from '../../components/MovieDetails';\r\n\r\nimport './Ticketing.scss';\r\n\r\ninterface RouteState {\r\n  showtime: string;\r\n}\r\n\r\nconst Ticketing: FC<RouteComponentProps<{}, {}, RouteState>> = ({ location }) => {\r\n  const [currentTicketingIdx, setCurrentTicketingIdx] = useState(0);\r\n  const [selectedSeats, setSelectedSeats] = useState<string[]>([]);\r\n  const { selectedMovie } = useContext(SelectedMovieContext);\r\n\r\n  const nextState = () => {\r\n    setCurrentTicketingIdx(currentTicketingIdx + 1);\r\n  };\r\n\r\n  const ticketingComponents = [\r\n    <ChooseTicketContainer nextState={nextState} />,\r\n    <ChooseSeatContainer\r\n      hallID={selectedMovie.hall_id || 0}\r\n      {...{ selectedSeats, setSelectedSeats, nextState, ...location.state }}\r\n    />,\r\n    <Redirect to={{ pathname: '/successful', state: { ...location.state, selectedSeats } }} />,\r\n  ];\r\n\r\n  return (\r\n    <div className=\"ticketing\">\r\n      <MovieDetails selectedMovie={selectedMovie} />\r\n      <div className=\"ticketing-states wrapper\">{ticketingComponents[currentTicketingIdx]}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ticketing;\r\n","import Ticketing from './Ticketing';\r\n\r\nexport default Ticketing;\r\n","import Successful from './Successful';\r\n\r\nexport default Successful;\r\n","import React, { FC, useContext } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { SelectedMovieContext } from '../../contexts/SelectedMovieContext';\r\n\r\nimport Button from '../../components/Button';\r\nimport Backdrop from '../../components/Backdrop';\r\n\r\nimport './Successful.scss';\r\n\r\ninterface RouteState {\r\n  showtime: string;\r\n  selectedSeats: string[];\r\n}\r\n\r\nconst Successful: FC<RouteComponentProps<{}, {}, RouteState>> = ({ location }) => {\r\n  const { selectedMovie } = useContext(SelectedMovieContext);\r\n\r\n  return (\r\n    <div className=\"successful\">\r\n      <Backdrop src={selectedMovie.backdrop_path} />\r\n\r\n      <div className=\"wrapper\">\r\n        <h1>Enjoy Watching!</h1>\r\n        <h2>Movie</h2>\r\n        <span>{selectedMovie.title}</span>\r\n        <h2>Showtime</h2>\r\n        <span>{location.state.showtime}</span>\r\n        <h2>Chosen Seats</h2>\r\n        <span>{location.state.selectedSeats.join(', ')}</span>\r\n        <Button\r\n          onClick={() => {\r\n            window.location.href = `${process.env.PUBLIC_URL}/`;\r\n          }}\r\n        >\r\n          Go Home\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Successful;\r\n","import Routes from './Routes';\r\n\r\nexport default Routes;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { Switch, Route, useLocation } from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\nimport Movie from './Movie';\r\nimport Ticketing from './Ticketing';\r\nimport Successful from './Successful';\r\n\r\nconst Routes: FC = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/movies/:id\" exact component={Movie} />\r\n      <Route path=\"/ticketing\" exact component={Ticketing} />\r\n      <Route path=\"/successful\" exact component={Successful} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React, { FC } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Header.scss';\r\n\r\nconst Header: FC = () => {\r\n  const { location, goBack } = useHistory();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"wrapper content\">\r\n        {location.pathname === '/' ? (\r\n          <h1 className=\"website-name\">CINEMANIA</h1>\r\n        ) : (\r\n          <FontAwesomeIcon onClick={goBack} icon={faChevronLeft} size=\"3x\" />\r\n        )}\r\n\r\n        <FontAwesomeIcon\r\n          onClick={() => {\r\n            window.location.href = 'https://www.github.com/numancan/cinemania';\r\n          }}\r\n          icon={faGithub}\r\n          size=\"3x\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { hot } from 'react-hot-loader/root';\r\nimport Routes from './routes';\r\n\r\nimport Header from './components/Header';\r\n\r\nimport './App.scss';\r\n\r\nconst App: FC = () => {\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <Routes />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default hot(App);\r\n","import React, { FunctionComponent } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { setConfig } from 'react-hot-loader';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport './styles/index.scss';\r\nimport { SelectedMovieProvider } from './contexts/SelectedMovieContext';\r\nimport { TotalContextProvider } from './contexts/TotalContext';\r\n\r\nsetConfig({\r\n  ignoreSFC: true,\r\n  pureRender: true,\r\n});\r\n\r\nconst Root: FunctionComponent = () => (\r\n  <SelectedMovieProvider>\r\n    <TotalContextProvider>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n      </BrowserRouter>\r\n    </TotalContextProvider>\r\n  </SelectedMovieProvider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}